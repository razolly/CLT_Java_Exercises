 ________  ________  ___          
|\   ____\|\   __  \|\  \         
\ \  \___|\ \  \|\  \ \  \        
 \ \_____  \ \  \\\  \ \  \       
  \|____|\  \ \  \\\  \ \  \____  
    ____\_\  \ \_____  \ \_______\
   |\_________\|___| \__\|_______|
   \|_________|     \|__|         
                        
Exercise 1

1. Write a SQL statement to display all the information of all salesmen.
	SELECT * 
	FROM   salesman;
	
2. Write a SQL statement to display specific columns like name and commission for all the salesman
	SELECT NAME, 
	       commission 
	FROM   salesman;
	
3.  Write a SQL statement to display names and city of salesman, who belongs to the city of Paris
	SELECT NAME, 
	       city 
	FROM   salesman 
	WHERE  city = 'Paris';
	
4. Write a SQL statement to display salesman id, name, city and commission who gets the commission 
	within the range more than 0.10% and less than 0.12%
	SELECT salesman_id, 
	       NAME, 
	       city, 
	       commission 
	FROM   salesman 
	WHERE  commission > 0.10 
	       AND commission < 0.12; 
	       
5. Write a SQL Statement to find those salesmen with all information who come from
	the city either Paris or Rome.
	SELECT * 
	FROM   salesman 
	WHERE  city IN ( 'Paris', 'Rome' ); 
	
6
	???
	
7.  Write a query to filter those salesmen with all information who likes to leave other
	cities than Paris and Rome.
	SELECT * 
	FROM   salesman 
	WHERE  city NOT LIKE 'Paris' 
	       AND city NOT LIKE 'Rome'; 
	       
8. Write a SQL statement to find those salesmen with all information who gets the
	commission within a range of 0.12 and 0.14
	SELECT * 
	FROM   salesman 
	WHERE  commission BETWEEN 0.12 AND 0.14; 
	
9. Write a SQL statement to find those salesmen with all other information and 
	name started with any latter within Aand 'K'.
	SELECT * FROM salesman WHERE name LIKE ‘[A-K]%’;
	DOESNT WORK
	
10. Write a SQL statement to find those salesmen with all other information and name
	started with other than any latter within A and 'L
	SELECT * FROM salesman WHERE name NOT LIKE ‘[A-L]%’;
	NOT WORKING
	
11.  Write a SQL statement to find those salesmen with all information whose name
	containing the 1st character is 'N' and the 4th character island rests may be any
	character
	SELECT * FROM salesman WHERE name LIKE ‘N__L%’;
	
12. Write a SQL statement to display the commission with the percent sign (%) with
	salesman ID, name and city columns for all the salesmen.
	SELECT Concat(commission, ‘%’) AS commission, 
	       salesman_id, 
	       NAME, 
	       city 
	FROM   salesman; 

Exercise 2

1. Write a query to display the columns in a specific order like order date,
	salesman id, order number and purchase amount from for all the orders
	SELECT ord_date, 
	       salesman_id, 
	       ord_no, 
	       purch_amt 
	FROM   orders;
	
2.	Write a query which will retrieve the value of salesman id of all salesmen, getting
	orders from the customers in orders table without any repeats
	SELECT DISTINCT salesman_id, 
	                ord_no 
	FROM            orders;
	NOT working 
	
3. Write a SQL query to display the order number followed by order date and the
	purchase amount for each order which will be delivered by the salesman who is
	holding the ID 5001
	SELECT ord_no, 
	       ord_date, 
	       purch_amt 
	FROM   orders 
	WHERE  salesman_id = 5001;

4. Write a SQL statement to display either those orders which are not issued on date
	2012-09-10 and issued by the salesman whose ID is 505 and below or those orders
	which purchase amount is 1000.00 and below.
	SELECT * 
	FROM   orders 
	WHERE  ( ord_date != '2012-09-10' 
	         AND salesman_id < 5005 ) 
	        OR purch_amt < 1000; 

5. Write a SQL query to display all orders where purchase amount less than a specified
	amount or order date and customer_id must not be greater than a specified data
	and less than a specified ID respectively
	SELECT * FROM clt6.orders WHERE purch_amt < 1000
	SELECT * FROM clt6.orders WHERE ord_date < '2012-10-01';
	SELECT * FROM clt6.orders WHERE customer_id BETWEEN 3003 AND 3007;

6. Display all in reverse, where order dates equal to a specified date or customer id
	greater than a specified number and purchase amount less than a specified amount.	
	SELECT * 
	FROM   orders 
	WHERE  ord_date = '2012-10-05' 
	        OR customer_id > 3005 
	           AND purch_amt < 1000 
	ORDER  BY ord_no DESC; 
	
7. Write a SQL query to display order number, purchase amount, archived, the
	unachieved percentage for those order which exceeds the 50% of the target value of 6000
	??
	??

8. Write a query to filter all those orders with all information which purchase amount
	value is within the range 500 and 4000 except those orders of purchase amount
	value 948.50 and 1983.43
	SELECT * 
	FROM   orders 
	WHERE  purch_amt BETWEEN 500 AND 4000 
	       AND purch_amt NOT IN ( 948.5, 1983.43 ); 

9. Write a SQL statement to find the total purchase amount of all orders
	SELECT Sum(purch_amt) 
	FROM   clt6.orders;

10. Write a SQL statement to find the average purchase amount of all orders
	SELECT Avg(purch_amt) 
	FROM   clt6.orders;

11. Write a SQL statement to find the number of salesmen currently listing for all of their
	customers.
	SELECT Count(salesman_id) 
	FROM   clt6.orders;
12
	SELECT Max(purch_amt) 
	FROM   clt6.orders;
13
	SELECT Min(purch_amt) 
	FROM   clt6.orders;
14
	SELECT customer_id, 
      	   Max(purch_amt) 
	FROM   clt6.orders 
	GROUP  BY customer_id; 
15
	SELECT customer_id, 
	       ord_date, 
	       purch_amt 
	FROM   clt6.orders 
	WHERE  ord_date = '2012-09-10' 
	ORDER  BY purch_amt DESC; 
16
	SELECT Max(purch_amt), 
	       salesman_id 
	FROM   clt6.orders 
	WHERE  ord_date = '2012-08-17'; 
17
	SELECT customer_id, 
	       Max(purch_amt), 
	       ord_date 
	FROM   clt6.orders 
	WHERE  purch_amt > 2000 
	GROUP  BY customer_id; 
18
	SELECT customer_id, 
	       Max(purch_amt), 
	       ord_date 
	FROM   clt6.orders 
	WHERE  purch_amt BETWEEN 2000 AND 6000 
	GROUP  BY customer_id 
	LIMIT  0, 1000; 
19
	SELECT customer_id, 
	       Max(purch_amt), 
	       ord_date 
	FROM   clt6.orders 
	WHERE  ( purch_amt BETWEEN 2000 AND 3000 ) 
	        OR ( purch_amt BETWEEN 5760 AND 6000 ) 
	GROUP  BY customer_id; 
20
	SELECT customer_id, 
	       Max(purch_amt) 
	FROM   clt6.orders 
	WHERE  customer_id BETWEEN 3002 AND 3007 
	GROUP  BY customer_id; 	
21
	SELECT customer_id, 
	       purch_amt 
	FROM   clt6.orders 
	WHERE  customer_id BETWEEN 3002 AND 3007 
	       AND purch_amt > 1000 
	GROUP  BY customer_id; 
22
	SELECT salesman_id, 
	       Max(purch_amt) 
	FROM   clt6.orders 
	WHERE  salesman_id BETWEEN 5003 AND 5008 
	GROUP  BY purch_amt; 
23
	SELECT Count(ord_date) 
	FROM   clt6.orders 
	WHERE  ord_date = '2012-08-17';
24
	SELECT Count(salesman_id) 
	FROM   clt6.orders 
	WHERE  salesman_id IS NOT NULL;Paper said TO count city? 
25
	SELECT   ord_date, 
	         Count(salesman_id) 
	FROM     clt6.orders 
	GROUP BY ord_date;
26
	SELECT Concat('For ', order_date, ' there were ', order_count, ' orders') AS 
	       'Order Count' 
	FROM   (SELECT ord_date      AS order_date, 
	               Count(ord_no) AS order_count 
	        FROM   clt6.orders 
	        GROUP  BY ord_date) AS SUBQUERY 
27
	SELECT   * 
	FROM     clt6.orders 
	ORDER BY ord_no;
28
	SELECT   * 
	FROM     clt6.orders 
	ORDER BY ord_date DESC;
29
	SELECT   * 
	FROM     clt6.orders 
	ORDER BY ord_date, 
	         purch_amt DESC;
30
	SELECT   salesman_id    AS 'Salesman ID', 
	         ord_date       AS 'Order Date', 
	         Max(purch_amt) AS 'Max Purchase Amount' 
	FROM     clt6.orders 
	GROUP BY ord_date 
	ORDER BY salesman_id, 
	         ord_date;
31
	SELECT   customer_id        AS 'Customer ID', 
	         Count(customer_id) AS 'Number of Orders', 
	         Max(purch_amt)     AS 'Biggest Purchase' 
	FROM     clt6.orders 
	GROUP BY customer_id;
 


Exercise - Customer table
1
	SELECT * 
	FROM   clt6.customer 
	WHERE  grade = 200;
2
	SELECT * 
	FROM   clt6.customer 
	WHERE  grade > 100;
3
	SELECT * 
	FROM   clt6.customer 
	WHERE  city = 'New York' 
	AND    grade > 100;
4
	SELECT * 
	FROM   clt6.customer 
	WHERE  city = 'New York' 
	OR     grade > 100;
5
	SELECT * 
	FROM   clt6.customer 
	WHERE  city = 'New York' 
	OR     NOT grade > 100;
6
	SELECT * 
	FROM   clt6.customer 
	WHERE  NOT ( 
	              city = 'New York' 
	       OR     grade > 100);
7
	SELECT * 
	FROM   clt6.customer 
	WHERE  customer_id IN (3007, 
	                       3008, 
	                       3009);
8
	SELECT * 
	FROM   clt6.customer 
	WHERE  grade IS NULL;
9
	SELECT * 
	FROM   clt6.customer 
	WHERE  grade IS NOT NULL;
10
	SELECT Count(cust_name) 
	FROM   clt6.customer;
 
11
Not sure what grade to look for
SELECT Count(cust_name) 
FROM   clt6.customer 
WHERE  grade >= 200;12SELECT   city       AS 'City', 
         Max(grade) AS 'Highest Grade' 
FROM     clt6.customer 
GROUP BY city;

12
SELECT 
    city, MAX(grade)
FROM
    clt6.customer
GROUP BY city;
 


13
SELECT 
    customer_id, cust_name, city, grade
FROM
    clt6.customer
ORDER BY customer_id;
 











SQL – Join Exercises
1
SELECT salesman.city AS 'city',salesman.NAME AS 'Salesman', 
       customer.cust_name AS 'Customer' 
FROM   clt6.salesman 
       INNER JOIN clt6.customer using (city); 
 
2
SELECT orders.ord_no,orders.purch_amt,customer.cust_name,customer.city 
FROM   clt6.orders,clt6.customer 
WHERE  clt6.orders.customer_id = clt6.customer.customer_id 
       AND purch_amt BETWEEN 500 AND 2000; 

 
3
SELECT customer.cust_name,salesman.NAME 
FROM   clt6.customer 
       LEFT OUTER JOIN clt6.salesman using (salesman_id); 
 













4
SELECT customer.cust_name 
FROM   clt6.customer,clt6.salesman 
WHERE  salesman.salesman_id = customer.salesman_id 
       AND customer.salesman_id IS NOT NULL 
       AND salesman.commission > 0.12; 
 










5
SELECT customer.cust_name 
FROM   clt6.customer,clt6.salesman 
WHERE  salesman.salesman_id = customer.salesman_id 
       AND customer.salesman_id IS NOT NULL 
       AND customer.city != salesman.city 
       AND salesman.commission > 0.12; 

 










6
SELECT orders.ord_no,orders.ord_date,orders.purch_amt,customer.cust_name, 
       salesman.NAME AS 'Salesman Name',salesman.commission 
FROM   clt6.orders,clt6.customer,clt6.salesman 
WHERE  orders.customer_id = customer.customer_id 
       AND orders.salesman_id = salesman.salesman_id 
 





7
SELECT customer.customer_id,salesman.city,orders.salesman_id 
FROM   clt6.orders,clt6.customer,clt6.salesman 
WHERE  customer.customer_id = orders.customer_id 
       AND salesman.city = customer.city 
       AND ( orders.salesman_id = customer.salesman_id 
             AND customer.salesman_id = salesman.salesman_id ) 
 










8
SELECT customer.customer_id,customer.cust_name AS 'Customer Name', 
       salesman.NAME AS 'Salesman Name' 
FROM   clt6.customer 
       LEFT OUTER JOIN clt6.salesman 
                    ON customer.salesman_id = salesman.salesman_id 
ORDER  BY customer.customer_id 
 









9
SELECT customer.customer_id,customer.cust_name AS 'Customer Name', 
       salesman.NAME AS 'Salesman Name',customer.grade 
FROM   clt6.customer,clt6.salesman 
WHERE  customer.salesman_id = salesman.salesman_id 
       AND grade < 300 
ORDER  BY customer.customer_id 
 










10
SELECT customer.cust_name,customer.city,orders.ord_no,orders.ord_date, 
       orders.purch_amt, 
       salesman.NAME AS 'Salesman Name',salesman.commission 
FROM   clt6.customer,clt6.salesman,clt6.orders 
WHERE  orders.customer_id = customer.customer_id 
       AND orders.salesman_id = salesman.salesman_id 
 



11
12
13
SELECT orders.ord_no,customer.cust_name,salesman.commission 
FROM   clt6.customer,clt6.salesman,clt6.orders 
WHERE  customer.customer_id = orders.customer_id 
       AND salesman.salesman_id = orders.salesman_id 
       AND customer.grade > 200 
 











SQL Union Exercises
1
SELECT customer.cust_name,customer.city 
FROM   clt6.customer 
WHERE  city = 'London' 
UNION 
SELECT salesman.NAME,salesman.city 
FROM   clt6.salesman 
WHERE  city = 'London' 
 









2
SELECT DISTINCT salesman.name, salesman.city FROM clt6.salesman
 

















3
SELECT salesman.NAME 
FROM   clt6.salesman 
UNION 
SELECT customer.cust_name 
FROM   clt6.customer 
 








4
SELECT salesman.salesman_id,salesman.NAME,orders.ord_date, 
       Max(orders.purch_amt) AS 'MAX, MIN' 
FROM   clt6.salesman,clt6.orders 
WHERE  orders.salesman_id = salesman.salesman_id 
GROUP  BY orders.ord_date 
UNION 
SELECT salesman.salesman_id,salesman.NAME,orders.ord_date,Min(orders.purch_amt) 
FROM   clt6.salesman,clt6.orders 
WHERE  orders.salesman_id = salesman.salesman_id 
GROUP  BY orders.ord_date 
ORDER  BY ord_date 
 




5
SELECT salesman.salesman_id,salesman.NAME,orders.ord_date,orders.ord_no, 
       Max(orders.purch_amt) AS 'MAX, MIN' 
FROM   clt6.salesman,clt6.orders 
WHERE  orders.salesman_id = salesman.salesman_id 
GROUP  BY orders.ord_date 
UNION 
SELECT salesman.salesman_id,salesman.NAME,orders.ord_date,orders.ord_no, 
       Min(orders.purch_amt) 
FROM   clt6.salesman,clt6.orders 
WHERE  orders.salesman_id = salesman.salesman_id 
GROUP  BY orders.ord_date 
ORDER  BY ord_no 
 

6
SELECT salesman.salesman_id,salesman.NAME 
FROM   clt6.salesman,clt6.customer 
WHERE  customer.salesman_id = salesman.salesman_id 
       AND salesman.city != customer.city 
UNION 
SELECT salesman.salesman_id,salesman.NAME 
FROM   clt6.salesman,clt6.customer 
WHERE  customer.salesman_id = salesman.salesman_id 
       AND salesman.city = customer.city 
 
